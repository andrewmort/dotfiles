# =============================================================================
#
# File: $HOME/.cshrc.user
# By Andrew Mort
#
# Last modified: 11/9/2017
#
# Try to make this similar to bashrc.
#   (source this file in .cshrc)
#
# =============================================================================

# Set to 1 to print debug numbers
set DEBUG_RC=0

# -----------------------------------------------------------------------------
# 1. Determine system we are running
# -----------------------------------------------------------------------------

if ( $DEBUG_RC > 0 ) then
  echo $DEBUG_RC
  set DEBUG_RC = `expr $DEBUG_RC + 1`
endif

set unameOut = `uname -s`
switch ("$unameOut")
  case "Linux*":
    set machine="linux"
    breaksw
  case "Darwin":
    set machine="mac"
    breaksw
  case "CYGWIN":
    set machine="cygwin";;
    breaksw
  default:
    set machine="UNKOWN"
    breaksw
endsw

# If we have brew installed on mac, change system type
if ( $machine == "mac" ) then
   if hash brew > /dev/null; then
      set machine="brew"

      # Add brew coreutils to path to override bsd versions with OSX
      setenv PATH "`brew --prefix coreutils`/libexec/gnubin:${PATH}"
      setenv MANPATH "`brew --prefix coreutils`/libexec/gnuman:${MANPATH}"
      setenv MANPATH "/usr/local/share/man:${MANPATH}"
   endif
endif

# -----------------------------------------------------------------------------
# 2. Source additional .cshrc.local files in home directory
# -----------------------------------------------------------------------------

if ( $DEBUG_RC > 0 ) then
  echo $DEBUG_RC
  set DEBUG_RC = `expr $DEBUG_RC + 1`
endif

if (-e ${HOME}/.cshrc.local) then
  source ${HOME}/.cshrc.local
endif

# -----------------------------------------------------------------------------
# 3. Add ~/bin to path and ~/share to manpath
# -----------------------------------------------------------------------------

if ( $DEBUG_RC > 0 ) then
  echo $DEBUG_RC
  set DEBUG_RC = `expr $DEBUG_RC + 1`
endif

# Add local bin to path
if ( -e /home/${USER}/bin ) then
    setenv PATH /home/${USER}/bin:${PATH}
endif

if ( -e /home/${USER}/share/man ) then
   setenv MANPATH /home/${USER}/share/man:${MANPATH}
endif

# -----------------------------------------------------------------------------
# 4. General settings for all shells
# -----------------------------------------------------------------------------

if ( $DEBUG_RC > 0 ) then
  echo $DEBUG_RC
  set DEBUG_RC = `expr $DEBUG_RC + 1`
endif

# remove . from path
setenv PATH `echo -n ${PATH} | awk -v RS=: -v ORS=: '$0 != "'.'"' | sed 's/:$//'`;

# set editor
setenv EDITOR vim

# -----------------------------------------------------------------------------
# 5. Exit when not running interactively
# -----------------------------------------------------------------------------

if ( $DEBUG_RC > 0 ) then
  echo $DEBUG_RC
  set DEBUG_RC = `expr $DEBUG_RC + 1`
endif

if ($?USER == 0 || $?prompt == 0) exit

# -----------------------------------------------------------------------------
# 6. General settings
# -----------------------------------------------------------------------------

if ( $DEBUG_RC > 0 ) then
  echo $DEBUG_RC
  set DEBUG_RC = `expr $DEBUG_RC + 1`
endif

# ensure shell variable is updated with correct shell
#setenv SHELL "/bin/tcsh"

# set history length
set history=2000
set savehist = 2000

# Notify when job completes
set notify

# No beep
set nobeep

# Enable file completion
set filec

# List choices when file completion fails
set autolist

# Do not create core file
limit coredumpsize 0

# -----------------------------------------------------------------------------
# 7. Appearance setings
# -----------------------------------------------------------------------------

if ( $DEBUG_RC > 0 ) then
  echo $DEBUG_RC
  set DEBUG_RC = `expr $DEBUG_RC + 1`
endif

# see if dircolors exists
which dircolors >& /dev/null

# set dircolors (used in ls)
if ($? == 0) then
  set DIRCOLOR_DIR = "${HOME}/.dircolors"

  if ("${SHELL_COLOR}" == "SOLARIZED_DARK") then
    set DIRCOLOR_FILE = "${DIRCOLOR_DIR}/dircolors.solarized-dark"
    if ( -e ${DIRCOLOR_FILE}) then
      eval `dircolors -c ${DIRCOLOR_FILE}`
    endif
  else if ("${SHELL_COLOR}" == "SOLARIZED_LIGHT") then
    set DIRCOLOR_FILE = "${DIRCOLOR_DIR}/dircolors.solarized-light"
    if ( -e ${DIRCOLOR_FILE}) then
      eval `dircolors -c ${DIRCOLOR_FILE}`
    endif
  endif
endif

# -----------------------------------------------------------------------------
# 8. Enable auto-completion for various commands
# -----------------------------------------------------------------------------

if ( $DEBUG_RC > 0 ) then
  echo $DEBUG_RC
  set DEBUG_RC = `expr $DEBUG_RC + 1`
endif

# Not available for tcsh

# -----------------------------------------------------------------------------
# 9. Set alias
# -----------------------------------------------------------------------------

if ( $DEBUG_RC > 0 ) then
  echo $DEBUG_RC
  set DEBUG_RC = `expr $DEBUG_RC + 1`
endif

# use colors with ls
if ( $machine == "mac" ) then
   alias ls "ls -G"
else
   alias ls "ls --color=auto"
endif

# user colors with grep
alias grep  "grep --color=auto"
alias fgrep "fgrep --color=auto"
alias egrep "egrep --color=auto"

alias cp "cp -i"
alias mv "mv -i"

alias ..   "cd .."
alias cd.. "cd .."

# find file in current directory or subdirectories (eg. ff '*.txt')
alias ff 'find . -name \!* -print'


# -----------------------------------------------------------------------------
# 10. Set prompt
# -----------------------------------------------------------------------------

if ( $DEBUG_RC > 0 ) then
  echo $DEBUG_RC
  set DEBUG_RC = `expr $DEBUG_RC + 1`
endif

# define solarized colors
set  COLOR_BASE03="%{\033[1;30m%}"   # brblack
set  COLOR_BASE02="%{\033[0;30m%}"   # black
set  COLOR_BASE01="%{\033[1;32m%}"   # brgreen
set  COLOR_BASE00="%{\033[1;33m%}"   # bryellow
set   COLOR_BASE0="%{\033[1;34m%}"   # brblue
set   COLOR_BASE1="%{\033[1;36m%}"   # brcyan
set   COLOR_BASE2="%{\033[0;37m%}"   # white
set   COLOR_BASE3="%{\033[1;37m%}"   # brwhite
set  COLOR_YELLOW="%{\033[0;33m%}"   # yellow
set  COLOR_ORANGE="%{\033[1;31m%}"   # brred
set     COLOR_RED="%{\033[0;31m%}"   # red
set COLOR_MAGENTA="%{\033[0;35m%}"   # magenta
set  COLOR_VIOLET="%{\033[1;35m%}"   # brmagenta
set    COLOR_BLUE="%{\033[0;34m%}"   # blue
set    COLOR_CYAN="%{\033[0;36m%}"   # cyan
set   COLOR_GREEN="%{\033[0;32m%}"   # green
set     COLOR_END="%{\033[0m%}"

# define prompt color usage
if ("${SHELL_COLOR}" == "SOLARIZED_DARK") then
   set   COLOR_TIME="${COLOR_BASE01}"
   set  COLOR_SHELL="${COLOR_VIOLET}"
   set   COLOR_USER="${COLOR_BASE0}"
   set   COLOR_PATH="${COLOR_BASE1}"
   set COLOR_PROMPT="${COLOR_BLUE}"
else if ("${SHELL_COLOR}" == "SOLARIZED_DARK") then
   set   COLOR_TIME="${COLOR_BASE1}"
   set  COLOR_SHELL="${COLOR_VIOLET}"
   set   COLOR_USER="${COLOR_BASE00}"
   set   COLOR_PATH="${COLOR_BASE01}"
   set COLOR_PROMPT="${COLOR_BLUE}"
else
   set COLOR_TIME="${COLOR_BASE03}"
   set COLOR_SHELL="${COLOR_CYAN}"
   set COLOR_USER=
   set COLOR_PATH=
   set COLOR_PROMPT="${COLOR_BLUE}"
endif


# clear settings
set PROMPT=""

# add time (24-hour, without seconds)
set PROMPT="${PROMPT}${COLOR_TIME}%T${COLOR_END} "

# add shell name
set PROMPT="${PROMPT}${COLOR_SHELL}(csh)${COLOR_END} "

# add username@hostname
set PROMPT="${PROMPT}${COLOR_USER}%n@%m${COLOR_END}:"

# add current working path
set PROMPT="${PROMPT}${COLOR_PATH}%c${COLOR_END}"

# add prompt indicator
set PROMPT="${PROMPT}${COLOR_PROMPT}>${COLOR_END} "

set prompt="$PROMPT"

# -----------------------------------------------------------------------------
# Cleanup Variables
# -----------------------------------------------------------------------------

unset DEBUG_RC

unset COLOR_BASE03
unset COLOR_BASE02
unset COLOR_BASE01
unset COLOR_BASE00
unset COLOR_BASE0
unset COLOR_BASE1
unset COLOR_BASE2
unset COLOR_BASE3
unset COLOR_YELLOW
unset COLOR_ORANGE
unset COLOR_RED
unset COLOR_MAGENTA
unset COLOR_VIOLET
unset COLOR_BLUE
unset COLOR_CYAN
unset COLOR_GREEN
unset COLOR_END

unset COLOR_RESET
unset COLOR_TIME
unset COLOR_USER
unset COLOR_PATH
unset COLOR_PROMPT

unset PROMPT
